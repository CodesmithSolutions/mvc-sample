@using System.Web.UI.WebControls
@using Codesmith.MvcSample.BusinessObjects
@{
    //Html.EnableClientValidation(true);
    var headerText = Model.UserId == 0 ? "Create User" : "Edit User";

    Array values = Enum.GetValues(typeof(UserRoleType));
    var items = new List<SelectListItem>(values.Length);

    foreach (var i in values)
    {
        items.Add(new SelectListItem
        {
            Text = Enum.GetName(typeof(UserRoleType), i),
            Value = i.ToString()
        });
    }

    @model Codesmith.MvcSample.Web.Models.UserEditModel
}

<h1>@headerText</h1>

@using (Html.BeginForm(null, null, FormMethod.Post, new { action = "/users/update" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserId)
    <div class="form-group">
        @Html.LabelFor(model => model.Username)
        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    </div>
    @*<div class="form-group">
        @Html.LabelFor(model => model.Role)
        @Html.DropDownListFor(model => model.Role, items, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.Password)
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword)
        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsActive)
        @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
    </div>

    <input type="submit" value="Save" class="btn btn-default" />
}